{"version":3,"sources":["GlobalStyle.ts","components/EthBalance.tsx","utils/Erc20Constants.ts","components/WethBalance.tsx","utils/WETHConstants.ts","components/Wrapper.tsx","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","avertaFont","avertaBoldFont","EthBalance","useState","balance","setBalance","useSafeAppsSDK","sdk","safe","a","eth","getBalance","safeAddress","balanceEth","ethers","utils","formatEther","useEffect","fetchBalance","console","log","size","Erc20","getWethAddress","network","WethBalance","provider","useMemo","SafeAppsSdkProvider","weth","Contract","toLowerCase","balanceOf","balanceWeth","WETHwithdraw_function","Wrapper","props","amountToWrap","setAmountToWrap","errorMessage","setErrorMessage","availableBalance","setAvailableBalance","isError","setIsError","safeTxHash","setSafeTxHash","wrapEth","useCallback","validateAmout","wrap","parsedAmount","parseEther","txs","send","to","value","toString","data","safeTx","error","withdraw","Interface","encodeFunctionData","newValue","Number","parseFloat","fetchAvailableEth","isNaN","Grid","container","spacing","Snackbar","open","length","autoHideDuration","onClose","message","item","xs","label","meta","onChange","e","target","color","variant","onClick","useStyles","makeStyles","root","alignItems","justifyContent","logo","width","height","StyledTitle","styled","Title","App","classes","setWrap","className","CardHeader","title","action","iconType","iconSize","textSize","CardContent","strong","ReactDOM","render","StrictMode","theme","loader","document","getElementById"],"mappings":"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","file":"static/js/main.1f76c122.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport avertaFont from '@gnosis.pm/safe-react-components/dist/fonts/averta-normal.woff2';\nimport avertaBoldFont from '@gnosis.pm/safe-react-components/dist/fonts/averta-bold.woff2';\n\nconst GlobalStyle = createGlobalStyle`\n    html {\n        height: 100%\n    }\n\n    body {\n       height: 100%;\n       margin: auto;\n       padding: 0px;\n       background-color: #F7F5F5;\n    }\n\n    #root {\n        height: 100%;\n        padding-right: 0.5rem;\n        align-items: center;\n        display: flex;\n        justify-content: center;\n    }\n\n    .MuiFormControl-root,\n    .MuiInputBase-root {\n        width: 100% !important;\n    }\n\n    @font-face {\n        font-family: 'Averta';\n        src: local('Averta'), local('Averta Bold'),\n        url(${avertaFont}) format('woff2'),\n        url(${avertaBoldFont}) format('woff');\n    }\n`;\n\nexport default GlobalStyle;\n","import React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { useSafeAppsSDK } from '@gnosis.pm/safe-apps-react-sdk';\nimport { Text } from '@gnosis.pm/safe-react-components';\n\nconst EthBalance: React.FC = () => {\n    const [balance, setBalance] = useState(\"loading...\");\n    const { sdk, safe } = useSafeAppsSDK();\n\n    async function fetchBalance() {\n        const balanceEth = await sdk.eth.getBalance([safe.safeAddress]);\n        setBalance(ethers.utils.formatEther(balanceEth));\n    }\n\n    useEffect(() => {\n        fetchBalance();\n        console.log(\"Updating ETH balance\");\n    }, []);\n\n    return <Text size=\"xl\" >Your ETH balance: {balance}</Text>\n}\n\nexport default EthBalance;\n\n","export const Erc20 = [\n    \"function approve(address _spender, uint256 _value) public returns (bool success)\",\n    \"function allowance(address _owner, address _spender) public view returns (uint256 remaining)\",\n    \"function balanceOf(address _owner) public view returns (uint256 balance)\",\n    \"event Approval(address indexed _owner, address indexed _spender, uint256 _value)\"\n];\n\nexport function getWethAddress(network: string): string {\n    return network == \"mainnet\" ? \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\" :\n        \"0xc778417E063141139Fce010982780140Aa0cD5Ab\";\n}\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { SafeAppsSdkProvider } from '@gnosis.pm/safe-apps-ethers-provider';\nimport { ethers } from 'ethers';\nimport { useSafeAppsSDK } from '@gnosis.pm/safe-apps-react-sdk';\nimport { Erc20, getWethAddress } from '../utils/Erc20Constants'\nimport { Text } from '@gnosis.pm/safe-react-components';\n\nconst WethBalance: React.FC = () => {\n    const [balance, setBalance] = useState(\"\");\n\n    const { sdk, safe } = useSafeAppsSDK();\n    const provider = useMemo(() => new SafeAppsSdkProvider(safe, sdk), [safe, sdk]);\n    const weth = useMemo(() => new ethers.Contract(getWethAddress(safe.network.toLowerCase()), Erc20, provider), [provider]);\n\n    async function fetchBalance() {\n        const balanceWeth = await weth.balanceOf(safe.safeAddress);\n        setBalance(ethers.utils.formatEther(balanceWeth));\n    }\n\n    useEffect(() => {\n        fetchBalance();\n        console.log(\"Updating WETH balance\");\n    }, []);\n\n    return <Text size=\"xl\" >Your WETH Balance: {balance}</Text>\n}\n\nexport default WethBalance;\n\n","export const WETHwithdraw_function = [\"function withdraw(uint wad) public\"];\nexport const WETH_ABI = `\n[\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"name\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"guy\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"wad\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"approve\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"totalSupply\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"src\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"dst\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"wad\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferFrom\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"wad\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"withdraw\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"decimals\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"balanceOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"symbol\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"dst\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"wad\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transfer\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [],\n\t\t\"name\": \"deposit\",\n\t\t\"outputs\": [],\n\t\t\"payable\": true,\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"allowance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"payable\": true,\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"fallback\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"name\": \"src\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"name\": \"guy\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"wad\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Approval\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"name\": \"src\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"name\": \"dst\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"wad\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Transfer\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"name\": \"dst\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"wad\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Deposit\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"name\": \"src\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"wad\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Withdrawal\",\n\t\t\"type\": \"event\"\n\t}\n]\n`;\n","import React, { useCallback, useEffect, useState, useMemo } from 'react';\nimport { useSafeAppsSDK } from '@gnosis.pm/safe-apps-react-sdk';\nimport { SafeAppsSdkProvider } from '@gnosis.pm/safe-apps-ethers-provider';\nimport { Snackbar } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { Button, TextField } from '@gnosis.pm/safe-react-components';\nimport { getWethAddress, Erc20 } from '../utils/Erc20Constants';\nimport { ethers } from 'ethers';\nimport { WETHwithdraw_function } from '../utils/WETHConstants';\nimport { wrap } from 'node:module';\n\n\ninterface WrapperProps {\n    wrap: boolean\n}\n\nconst Wrapper: React.FC<WrapperProps> = (props: WrapperProps) => {\n    const { sdk, safe } = useSafeAppsSDK();\n\n    const [amountToWrap, setAmountToWrap] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [availableBalance, setAvailableBalance] = useState(0.0);\n    const [isError, setIsError] = useState(false);\n    const [safeTxHash, setSafeTxHash] = useState(\"\");\n\n    const provider = useMemo(() => new SafeAppsSdkProvider(safe, sdk), [safe, sdk]);\n    const weth = useMemo(() => new ethers.Contract(getWethAddress(safe.network.toLowerCase()), Erc20, provider), [provider]);\n\n    const wrapEth = useCallback(async () => {\n        validateAmout(amountToWrap);\n        if (isError) {\n            return;\n        }\n\n        if (props.wrap) {\n            try {\n                const parsedAmount = ethers.utils.parseEther(amountToWrap)\n                const safeTx = await sdk.txs.send({\n                    txs: [{\n                        to: getWethAddress(safe.network.toLowerCase()),\n                        value: parsedAmount.toString(),\n                        data: '0x'\n                    }]\n                })\n                setSafeTxHash(safeTx.safeTxHash);\n                console.log(safeTx.safeTxHash);\n            } catch (e) {\n                console.error(e)\n            }\n        } else {\n            try {\n                const parsedAmount = ethers.utils.parseEther(amountToWrap);\n                const withdraw = new ethers.utils.Interface(WETHwithdraw_function);\n                const safeTx = await sdk.txs.send({\n                    txs: [{\n                        to: getWethAddress(safe.network.toLowerCase()),\n                        value: '0',\n                        data: withdraw.encodeFunctionData(\"withdraw\", [parsedAmount])\n                    }]\n                })\n                setSafeTxHash(safeTx.safeTxHash);\n                console.log(safeTx.safeTxHash);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }, [sdk, amountToWrap, isError, props.wrap])\n\n    useEffect(() => {\n        fetchAvailableEth();\n    }, [safe, sdk, props.wrap]);\n\n    async function fetchAvailableEth() {\n        var newValue = \"0\";\n        if (props.wrap){\n            const balanceEth = await sdk.eth.getBalance([safe.safeAddress]);\n            newValue = ethers.utils.formatEther(balanceEth);\n        } else {\n            const balanceWeth = await weth.balanceOf(safe.safeAddress);\n            newValue = ethers.utils.formatEther(balanceWeth);\n        }\n        setAvailableBalance(Number.parseFloat(newValue));\n    };\n\n    const validateAmout = useCallback((newValue: string) => {\n        console.log(newValue);\n        if (isNaN(Number(newValue))) {\n            setIsError(true);\n            setErrorMessage(\"Not a number\");\n        }\n        else if (Number.parseFloat(newValue) > availableBalance) {\n            setIsError(true);\n            setErrorMessage(\"Insufficient funds\");\n        }\n        else {\n            setIsError(false);\n            setErrorMessage(\"\");\n            setAmountToWrap(newValue);\n        }\n    }, [availableBalance])\n\n    return (\n        <Grid container spacing={3}>\n            <Snackbar\n                open={safeTxHash.length != 0}\n                autoHideDuration={3000}\n                onClose={() => setSafeTxHash(\"\")}\n                message=\"You transaction has been submitted\"\n            />\n            <Grid item xs={8}>\n                <TextField\n                    value={amountToWrap}\n                    label={props.wrap ? \"ETH amount\" : \"WETH amount\"}\n                    meta={{ error: errorMessage }}\n                    onChange={e => validateAmout(e.target.value)} />\n            </Grid>\n            <Grid item xs={8}>\n                <Button size=\"md\" color=\"primary\" variant=\"contained\" onClick={() => wrapEth()}>\n                    {props.wrap ? \"Wrap\" : \"Unwrap\"}\n                </Button>\n            </Grid>\n        </Grid>);\n}\n\nexport default Wrapper;\n","import styled from 'styled-components';\nimport EthBalance from './components/EthBalance';\nimport WethBalance from './components/WethBalance';\nimport Wrapper from './components/Wrapper';\nimport { CardContent, makeStyles, CardActions, CardHeader } from '@material-ui/core';\nimport { Button, ButtonLink, Card, IconText, Text, Title } from '@gnosis.pm/safe-react-components';\nimport React, { useState } from 'react';\n\nconst useStyles = makeStyles({\n  root: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  logo: {\n    width: \"32px\",\n    height: \"32px\",\n  },\n});\n\nconst StyledTitle = styled(Title)`\n  margin-top: 0;`;\n\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const [wrap, setWrap] = useState(true);\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        title={\n          wrap ?\n            <StyledTitle size=\"sm\">Wrap ETH</StyledTitle> :\n            <StyledTitle size=\"sm\">Unwrap WETH</StyledTitle>\n        }\n        action={\n          <ButtonLink iconType=\"code\" iconSize=\"md\" color=\"primary\" textSize=\"xl\" onClick={() => setWrap(!wrap)} >Switch</ButtonLink>\n        }\n      />\n      <CardContent>\n        {wrap ?\n          <Text size=\"xl\" strong>How much ETH do you want to wrap? </Text> :\n          <Text size=\"xl\" strong>How much WETH do you want to unwrap? </Text>\n        }\n        <br />\n        {wrap ?\n          <EthBalance />\n          : <WethBalance />}\n        <br />\n        <Wrapper wrap={wrap} />\n      </CardContent>\n    </Card >\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { theme, Loader, Title } from '@gnosis.pm/safe-react-components';\nimport SafeProvider from '@gnosis.pm/safe-apps-react-sdk';\n\nimport GlobalStyle from './GlobalStyle';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <SafeProvider\n        loader={\n          <>\n            <Title size=\"md\">Waiting for Safe...</Title>\n            <Loader size=\"md\" />\n          </>\n        }\n      >\n        <App />\n      </SafeProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}