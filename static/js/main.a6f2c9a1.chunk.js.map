{"version":3,"sources":["GlobalStyle.ts","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","avertaFont","avertaBoldFont","Container","styled","form","App","useSafeAppsSDK","sdk","safe","useState","submitting","setSubmitting","balance","setBalance","a","eth","getBalance","safeAddress","useEffect","fetchBalance","console","log","submitTx","useCallback","txs","send","to","value","data","safeTxHash","getBySafeTxHash","safeTx","error","size","color","onClick","ReactDOM","render","StrictMode","theme","loader","document","getElementById"],"mappings":"6NAiCeA,EA7BKC,4BAAH,2fAwBHC,IACAC,K,yCCvBRC,EAAYC,UAAOC,KAAV,6LA2EAC,EAhEO,WAAO,IAAD,EAEJC,2BAAdC,EAFkB,EAElBA,IAAKC,EAFa,EAEbA,KAFa,EAGUC,oBAAS,GAHnB,mBAGnBC,EAHmB,KAGPC,EAHO,OAIIF,mBAAS,iBAJb,mBAInBG,EAJmB,KAIVC,EAJU,iDAW1B,4BAAAC,EAAA,sEACwBP,EAAIQ,IAAIC,WAAW,CAACR,EAAKS,cADjD,OACQL,EADR,OAEEC,EAAWD,GAFb,4CAX0B,sBAM1BM,qBAAU,YANgB,mCAOxBC,GACAC,QAAQC,IAAI,sBACX,CAACb,EAAMD,IAOV,IAAMe,EAAWC,sBAAW,sBAAC,gCAAAT,EAAA,6DAC3BH,GAAc,GADa,kBAGIJ,EAAIiB,IAAIC,KAAK,CACxCD,IAAK,CACH,CACEE,GAAIlB,EAAKS,YACTU,MAAO,IACPC,KAAM,SARa,uBAGjBC,EAHiB,EAGjBA,WASRT,QAAQC,IAAI,CAAEQ,eAZW,SAaJtB,EAAIiB,IAAIM,gBAAgBD,GAbpB,OAanBE,EAbmB,OAczBX,QAAQC,IAAI,CAAEU,WAdW,kDAgBzBX,QAAQY,MAAR,MAhByB,QAkB3BrB,GAAc,GAlBa,0DAmB1B,CAACH,EAAMD,IAEV,OACE,eAACL,EAAD,WACE,cAAC,QAAD,CAAO+B,KAAK,KAAZ,SAAkBzB,EAAKS,cACvB,cAAC,QAAD,CAAOgB,KAAK,KAAZ,SAAkBrB,IACjBF,EACC,qCACE,cAAC,SAAD,CAAQuB,KAAK,OACb,uBACA,cAAC,SAAD,CACEA,KAAK,KACLC,MAAM,YACNC,QAAS,WACPxB,GAAc,IAJlB,uBAWA,cAAC,SAAD,CAAQsB,KAAK,KAAKC,MAAM,UAAUC,QAASb,EAA3C,wBChEVc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,gBAAD,CAAeC,MAAOA,QAAtB,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CACEC,OACE,qCACE,cAAC,QAAD,CAAOP,KAAK,KAAZ,iCACA,cAAC,SAAD,CAAQA,KAAK,UAJnB,SAQE,cAAC,EAAD,WAINQ,SAASC,eAAe,W","file":"static/js/main.a6f2c9a1.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport avertaFont from '@gnosis.pm/safe-react-components/dist/fonts/averta-normal.woff2';\nimport avertaBoldFont from '@gnosis.pm/safe-react-components/dist/fonts/averta-bold.woff2';\n\nconst GlobalStyle = createGlobalStyle`\n    html {\n        height: 100%\n    }\n\n    body {\n       height: 100%;\n       margin: 0px;\n       padding: 0px;\n    }\n\n    #root {\n        height: 100%;\n        padding-right: 0.5rem;\n    }\n\n    .MuiFormControl-root,\n    .MuiInputBase-root {\n        width: 100% !important;\n    }\n\n    @font-face {\n        font-family: 'Averta';\n        src: local('Averta'), local('Averta Bold'),\n        url(${avertaFont}) format('woff2'),\n        url(${avertaBoldFont}) format('woff');\n    }\n`;\n\nexport default GlobalStyle;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { BigNumber, ethers } from 'ethers';\nimport styled from 'styled-components';\nimport { Button, Loader, Title } from '@gnosis.pm/safe-react-components';\nimport { useSafeAppsSDK } from '@gnosis.pm/safe-apps-react-sdk';\n\nconst Container = styled.form`\n  margin-bottom: 2rem;\n  width: 100%;\n  max-width: 480px;\n\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-column-gap: 1rem;\n  grid-row-gap: 1rem;\n`;\n\nconst App: React.FC = () => {\n\n  const { sdk, safe } = useSafeAppsSDK();\n  const [submitting, setSubmitting] = useState(false);\n  const [balance, setBalance] = useState(\"loading state\");\n\n  useEffect(() => {\n    fetchBalance();\n    console.log(\"Updating balance\");\n  }, [safe, sdk]);\n\n  async function fetchBalance() {\n    const balance = await sdk.eth.getBalance([safe.safeAddress]);\n    setBalance(balance);\n  }\n\n  const submitTx = useCallback(async () => {\n    setSubmitting(true);\n    try {\n      const { safeTxHash } = await sdk.txs.send({\n        txs: [\n          {\n            to: safe.safeAddress,\n            value: '0',\n            data: '0x',\n          },\n        ],\n      });\n      console.log({ safeTxHash });\n      const safeTx = await sdk.txs.getBySafeTxHash(safeTxHash);\n      console.log({ safeTx });\n    } catch (e) {\n      console.error(e);\n    }\n    setSubmitting(false);\n  }, [safe, sdk]);\n\n  return (\n    <Container>\n      <Title size=\"md\">{safe.safeAddress}</Title>\n      <Title size=\"md\">{balance}</Title>\n      {submitting ? (\n        <>\n          <Loader size=\"md\" />\n          <br />\n          <Button\n            size=\"lg\"\n            color=\"secondary\"\n            onClick={() => {\n              setSubmitting(false);\n            }}\n          >\n            Cancel\n          </Button>\n        </>\n      ) : (\n          <Button size=\"lg\" color=\"primary\" onClick={submitTx}>\n            Submit\n          </Button>\n        )}\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { theme, Loader, Title } from '@gnosis.pm/safe-react-components';\nimport SafeProvider from '@gnosis.pm/safe-apps-react-sdk';\n\nimport GlobalStyle from './GlobalStyle';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <SafeProvider\n        loader={\n          <>\n            <Title size=\"md\">Waiting for Safe...</Title>\n            <Loader size=\"md\" />\n          </>\n        }\n      >\n        <App />\n      </SafeProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}